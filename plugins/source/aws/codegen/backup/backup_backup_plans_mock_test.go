// Code generated by codegen; DO NOT EDIT.

package backup

import (
	"testing"

	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client/mocks"
	"github.com/cloudquery/faker/v3"
	"github.com/golang/mock/gomock"

	"github.com/aws/aws-sdk-go-v2/service/backup"
)

func buildBackupBackupPlans(t *testing.T, ctrl *gomock.Controller) client.Services {
	mock := mocks.NewMockBackupClient(ctrl)

	var item types.BackupPlansListMember
	if err := faker.FakeData(&item); err != nil {
		t.Fatal(err)
	}
	mock.EXPECT().ListBackupPlans(
		gomock.Any(),
		&backup.ListBackupPlansInput{},
		gomock.Any(),
	).Return(
		&backup.ListBackupPlansOutput{
			BackupPlansList: []types.BackupPlansListMember{item},
		},
		nil,
	)

	var detail backup.GetBackupPlanOutput
	if err := faker.FakeData(&detail); err != nil {
		t.Fatal(err)
	}

	detail.BackupPlanId = item.BackupPlanId

	detail.VersionId = item.VersionId

	mock.EXPECT().GetBackupPlan(
		gomock.Any(),
		&backup.GetBackupPlanInput{

			BackupPlanId: item.BackupPlanId,

			VersionId: item.VersionId,
		},
		gomock.Any(),
	).Return(

		&detail,

		nil,
	)

	return client.Services{
		Backup: mock,
	}
}

func TestBackupBackupPlans(t *testing.T) {
	client.AwsMockTestHelper(t, BackupBackupPlans(), buildBackupBackupPlans, client.TestOptions{})
}
