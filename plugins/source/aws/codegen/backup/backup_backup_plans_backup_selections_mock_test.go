// Code generated by codegen using template resource_list_describe_mock_test.go.tpl; DO NOT EDIT.

package backup

import (
	"testing"

	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client/mocks"
	"github.com/cloudquery/faker/v3"
	"github.com/golang/mock/gomock"

	"github.com/aws/aws-sdk-go-v2/service/backup"
)

func buildBackupBackupPlansBackupSelections(t *testing.T, ctrl *gomock.Controller) client.Services {
	mock := mocks.NewMockBackupClient(ctrl)

	var item types.BackupSelectionsListMember
	if err := faker.FakeData(&item); err != nil {
		t.Fatal(err)
	}
	mock.EXPECT().ListBackupSelections(
		gomock.Any(),
		&backup.ListBackupSelectionsInput{},
		gomock.Any(),
	).Return(
		&backup.ListBackupSelectionsOutput{
			BackupSelectionsList: []types.BackupSelectionsListMember{item},
		},
		nil,
	)

	var detail backup.GetBackupSelectionOutput
	if err := faker.FakeData(&detail); err != nil {
		t.Fatal(err)
	}

	detail.BackupPlanId = item.BackupPlanId

	detail.SelectionId = item.SelectionId

	mock.EXPECT().GetBackupSelection(
		gomock.Any(),
		&backup.GetBackupSelectionInput{

			BackupPlanId: item.BackupPlanId,

			SelectionId: item.SelectionId,
		},
		gomock.Any(),
	).Return(

		&detail,

		nil,
	)

	return client.Services{
		Backup: mock,
	}
}

func TestBackupBackupPlansBackupSelections(t *testing.T) {
	client.AwsMockTestHelper(t, BackupBackupPlansBackupSelections(), buildBackupBackupPlansBackupSelections, client.TestOptions{})
}
