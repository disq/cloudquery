// Code generated by codegen; DO NOT EDIT.

package backup

import (
	"context"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/cq-provider-sdk/provider/diag"
	"github.com/cloudquery/cq-provider-sdk/provider/schema"

	"github.com/aws/aws-sdk-go-v2/service/backup"
)

func BackupRegionSettings() *schema.Table {
	return &schema.Table{
		Name:      "aws_backup_region_settings",
		Resolver:  fetchBackupRegionSettings,
		Multiplex: client.ServiceAccountRegionMultiplexer("backup"),
		Columns: []schema.Column{
			{
				Name:        "account_id",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSAccount,
				Description: `The AWS Account ID of the resource.`,
			},
			{
				Name:        "region",
				Type:        schema.TypeString,
				Resolver:    client.ResolveAWSRegion,
				Description: `The AWS Region of the resource.`,
			},
			{
				Name:     "resource_type_management_preference",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ResourceTypeManagementPreference"),
			},
			{
				Name:     "resource_type_opt_in_preference",
				Type:     schema.TypeJSON,
				Resolver: schema.PathResolver("ResourceTypeOptInPreference"),
			},
		},
	}
}

func fetchBackupRegionSettings(ctx context.Context, meta schema.ClientMeta, parent *schema.Resource, res chan<- interface{}) error {
	cl := meta.(*client.Client)
	svc := cl.Services().Backup

	input := backup.DescribeRegionSettingsInput{}

	{
		response, err := svc.DescribeRegionSettings(ctx, &input)
		if err != nil {

			return diag.WrapError(err)
		}
		res <- response

	}
	return nil
}
