// Code generated by codegen; DO NOT EDIT.

package {{.AWSService | ToLower}}

import (
	"testing"

	"github.com/cloudquery/cloudquery/plugins/source/aws/client"
	"github.com/cloudquery/cloudquery/plugins/source/aws/client/mocks"
	"github.com/cloudquery/faker/v3"
	"github.com/golang/mock/gomock"

	"{{.TypesImport}}"
{{range .MockImports}}	{{.}}
{{end}}
)

func {{.MockFuncName}}(t *testing.T, ctrl *gomock.Controller) client.Services {
	mock := mocks.NewMock{{.AWSService | ToCamel}}Client(ctrl)

	item := types.{{.ItemName}}{}
	err := faker.FakeData(&item)
	if err != nil {
		t.Fatal(err)
	}
	mock.EXPECT().{{.Verb | Coalesce "Get"}}{{.AWSSubService | ToCamel}}(gomock.Any(), gomock.Any(), gomock.Any()).Return(
		&{{.AWSService | ToLower}}.{{.Verb | Coalesce "Get"}}{{.AWSSubService | ToCamel}}Output{
			{{.ResponseItemsName | Coalesce "Items"}}: []types.{{.ItemName}}{item},
		}, nil)
	return client.Services{
		{{.AWSService | ToCamel}}: mock,
	}
}

func {{.TestFuncName}}(t *testing.T) {
	client.AwsMockTestHelper(t, {{.TableFuncName}}(), {{.MockFuncName}}, client.TestOptions{})
}
